---
- name: Clone rbenv
  git:
    repo: https://github.com/rbenv/rbenv.git
    dest: '{{ rbenv_root }}'

- name: Set up rbenv init
  copy:
    src: rbenv/rbenv.bashrc
    dest: '{{ user_home }}/.bashrc.d/99-rbenv.bashrc'

- name: Install ruby-build
  git:
    repo: https://github.com/rbenv/ruby-build.git
    dest: '{{ rbenv_root }}/plugins/ruby-build'

# https://github.com/rbenv/ruby-build/wiki#suggested-build-environment
- name: Install ruby-build dependencies
  ansible.builtin.apt:
    name:
      - autoconf
      - bison
      - patch
      - build-essential
      - rustc
      - libssl-dev
      - libyaml-dev
      - libreadline6-dev
      - zlib1g-dev
      - libgmp-dev
      - libncurses5-dev
      - libffi-dev
      - libgdbm6
      - libgdbm-dev
      - libdb-dev
      - uuid-dev
  become: true

- name: Install rbenv-default-gems
  git:
    repo: https://github.com/rbenv/rbenv-default-gems.git
    dest: '{{ rbenv_root }}/plugins/rbenv-default-gems'

- name: Add default gems
  copy:
    src: rbenv/default-gems
    dest: '{{ rbenv_root }}/default-gems'
    backup: yes

- name: Disable documentation generation on gem install
  lineinfile:
    path: '{{ user_home }}/.gemrc'
    line: 'gem: --no-document'
    create: yes

- name: Fetch latest ruby version
  ansible.builtin.shell: >
    {{ rbenv_root }}/bin/rbenv install -l | grep -v - | tail -1
  register: ruby_version_output
  changed_when: false

- name: Set ruby_version fact
  ansible.builtin.set_fact:
    ruby_version: '{{ ruby_version_output.stdout }}'

- name: Install ruby {{ ruby_version }}
  shell: >
    {{ rbenv_root }}/bin/rbenv install {{ ruby_version }}
  args:
    creates: '{{ rbenv_root }}/versions/{{ ruby_version }}/bin/ruby'

- name: Set ruby {{ ruby_version }} as global
  shell: >
    {{ rbenv_root }}/bin/rbenv global {{ ruby_version }}
